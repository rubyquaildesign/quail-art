{"version":3,"sources":["../src/lib/clipping.ts","../src/clip.ts"],"sourcesContent":["import type {\n\tClipperLibWrapper,\n\tClipParams,\n\tOffsetParams,\n} from 'js-angusj-clipper/universal';\nimport * as clipperLibrary from 'js-angusj-clipper/universal';\nimport { Vec } from './vec';\nimport { toVecShape, toXyShape } from './xy-point-helpers';\nfunction getLoopDepth(arr: any): number {\n\treturn Array.isArray(arr) ? 1 + getLoopDepth(arr[0]) : 0;\n}\nconsole.log('clippo');\nconsole.log(clipperLibrary);\n\ntype Point = [number, number] | Vec | number[];\ntype Loop = Point[];\ntype Shape = Loop[];\ntype VecShape = Vec[][];\nconst c = clipperLibrary;\nconst jts = {\n\tmiter: c.JoinType.Miter,\n\tround: c.JoinType.Round,\n\tsquare: c.JoinType.Square,\n};\ntype JoinType = keyof typeof jts;\nexport class Clip {\n\tfactor = 1e3;\n\tpreserveColinear = false;\n\tconstructor(public ajc: ClipperLibWrapper, factor?: number) {\n\t\tif (factor !== undefined) {\n\t\t\tthis.factor = factor;\n\t\t}\n\t}\n\n\tprivate isLoop(source: Loop | Shape): source is Loop {\n\t\tif (typeof source[0][0] === 'number') {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tprivate toShape(inputSet: Loop | Shape): Shape {\n\t\treturn this.isLoop(inputSet) ? [inputSet] : inputSet;\n\t}\n\n\tunion(inputShapes: Shape | Shape[]): VecShape | undefined {\n\t\tconst extractedShapes: Shape[] = this.isLoop(inputShapes[0])\n\t\t\t? ([inputShapes] as Shape[])\n\t\t\t: (inputShapes as Shape[]);\n\t\tconst workingShapes = extractedShapes.map((sh) =>\n\t\t\ttoXyShape(sh, this.factor),\n\t\t);\n\t\tconst clipOptions = {\n\t\t\tclipType: c.ClipType.Union,\n\t\t\tsubjectFillType: c.PolyFillType.NonZero,\n\t\t\tpreserveCollinear: this.preserveColinear,\n\t\t\tsubjectInputs: workingShapes.map((poly) => ({\n\t\t\t\tclosed: true,\n\t\t\t\tdata: poly,\n\t\t\t})),\n\t\t} satisfies ClipParams;\n\t\tconst result = this.ajc.clipToPaths(clipOptions);\n\n\t\treturn toVecShape(result, this.factor);\n\t}\n\n\tintersect(\n\t\tsubjectShape: Shape | Loop,\n\t\tclipShape: Shape | Loop,\n\t): VecShape | undefined {\n\t\tconst workingSubj = toXyShape(this.toShape(subjectShape), this.factor);\n\t\tconst workingClip = toXyShape(this.toShape(clipShape), this.factor);\n\t\tconst clipOptions = {\n\t\t\tclipType: c.ClipType.Intersection,\n\t\t\tsubjectFillType: c.PolyFillType.EvenOdd,\n\t\t\tpreserveCollinear: this.preserveColinear,\n\t\t\tsubjectInputs: [\n\t\t\t\t{\n\t\t\t\t\tclosed: true,\n\t\t\t\t\tdata: workingSubj,\n\t\t\t\t},\n\t\t\t],\n\t\t\tclipInputs: [\n\t\t\t\t{\n\t\t\t\t\tdata: workingClip,\n\t\t\t\t},\n\t\t\t],\n\t\t} satisfies ClipParams;\n\t\tconst result = this.ajc.clipToPaths(clipOptions);\n\n\t\treturn toVecShape(result, this.factor);\n\t}\n\n\toffset(\n\t\tsubjectSet: Shape | Loop | Shape[],\n\t\tammount: number,\n\t\tjoinType: JoinType = 'miter',\n\t\tmiterLimit = 2,\n\t): VecShape | undefined {\n\t\tconst inputType = getLoopDepth(subjectSet);\n\t\tif (inputType > 4 || inputType < 2)\n\t\t\tthrow new Error(`bad input not shape loop or list of shapes`);\n\t\tconst workingShape =\n\t\t\tinputType === 4\n\t\t\t\t? subjectSet.map((s) => toXyShape(s as Shape))\n\t\t\t\t: [this.toShape(subjectSet as Shape | Loop)].map((s) =>\n\t\t\t\t\t\ttoXyShape(s, this.factor),\n\t\t\t\t  );\n\t\tconst workingAmmount = Math.round(ammount * this.factor);\n\t\tconst offsetSettings: OffsetParams = {\n\t\t\tdelta: workingAmmount,\n\t\t\tmiterLimit,\n\t\t\tarcTolerance: 5,\n\t\t\toffsetInputs: workingShape.map((sh) => ({\n\t\t\t\tdata: sh,\n\t\t\t\tendType: c.EndType.ClosedPolygon,\n\t\t\t\tjoinType: jts[joinType],\n\t\t\t})),\n\t\t};\n\t\tconst output = this.ajc.offsetToPaths(offsetSettings);\n\t\treturn output === undefined ? undefined : toVecShape(output, this.factor);\n\t}\n}\nexport async function buildClipper(factor?: number) {\n\tconsole.log('building');\n\n\tconst lib = await clipperLibrary.loadNativeClipperLibInstanceAsync(\n\t\tclipperLibrary.NativeClipperLibRequestedFormat.WasmWithAsmJsFallback,\n\t);\n\treturn new Clip(lib, factor);\n}\n","import { buildClipper } from './lib/clipping';\nconst clipLib = await buildClipper();\nconsole.log(clipLib);\n\n(globalThis as any).clip = clipLib;\ndeclare global {\n\tconst clip: typeof clipLib;\n}\n"],"mappings":"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","names":[]}